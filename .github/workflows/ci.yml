name: ci

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  fmt:
    name: format
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: install rust (stable + rustfmt)
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: cache cargo
        uses: Swatinem/rust-cache@v2

      - name: cargo fmt --all --check
        run: cargo fmt --all --check

  clippy:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: install rust (stable + clippy)
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: cache cargo
        uses: Swatinem/rust-cache@v2

      - name: cargo clippy --all-targets --all-features -D warnings
        run: cargo clippy --all-targets --all-features -- -D warnings

  check:
    name: analyze
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: install rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: cache cargo
        uses: Swatinem/rust-cache@v2

      - name: cargo check --all-targets --all-features
        run: cargo check --all-targets --all-features

  test:
    name: tests
    needs: [fmt, clippy, check]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: install rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: cache cargo
        uses: Swatinem/rust-cache@v2

      - name: cargo test --all-features --all-targets --workspace
        run: cargo test --all-features --all-targets --workspace

  docs:
    name: docs
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: install rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: cache cargo
        uses: Swatinem/rust-cache@v2

      - name: cargo doc (warns as errors)
        env:
          RUSTDOCFLAGS: -D warnings
        run: cargo doc --no-deps --workspace
